Imports System.Net.Mail
Partial Class Administration
    Inherits System.Web.UI.Page
    Private MachineName As String
    Private mpContentPlaceHolder As ContentPlaceHolder
    Private wctrl As WriteDatauc
    Public Property LinacName() As String
        Get
            Return MachineName
        End Get
        Set(ByVal value As String)
            MachineName = value
        End Set
    End Property
    ''' <summary>
    ''' This is a sample documentation bit
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Protected Sub Page_Init(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Init

        mpContentPlaceHolder = _
            CType(Master.FindControl("ContentPlaceHolder1"),  _
            ContentPlaceHolder)
        If Not mpContentPlaceHolder Is Nothing Then
            wctrl = CType(mpContentPlaceHolder.FindControl("Writedatauc1"), WriteDatauc)
            AddHandler wctrl.UserApproved, AddressOf UserApprovedEvent
            'cusctrl = CType(mpContentPlaceHolder.FindControl("AcceptLinac3"), AcceptLinac)
            'AddHandler cusctrl.ClinicalApproved, AddressOf ClinicalApprovedEvent
        End If




    End Sub
    Protected Sub UserApprovedEvent(ByVal Tabset As String, ByVal Userinfo As String)

        Dim tabcontrol As String = Tabset
        Dim Action As String = Application("ActionState")
        If tabcontrol = "Admin" Then

            mpContentPlaceHolder = _
                CType(Master.FindControl("ContentPlaceHolder1"),  _
                ContentPlaceHolder)
            If Not mpContentPlaceHolder Is Nothing Then
                wctrl = CType(mpContentPlaceHolder.FindControl("Writedatauc1"), WriteDatauc)
                wctrl.Visible = False
                If Action = "Confirm" Then
                    MultiView1.SetActiveView(LoggedIn)
                Else
                    'close the page because the user has cancelled

                    ' last result from http://forums.asp.net/t/1248126.aspx?How+to+close+browser+window+from+codebehind+
                    'ScriptManager.RegisterClientScriptBlock(Page, GetType(Page), "close", "window.close();", True)
                    ClientScript.RegisterClientScriptBlock(Page.GetType(), "script", "window.close();", True)

                End If
            End If
        End If
    End Sub

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim objCon As UserControl = Page.LoadControl("CreateUseruc.ascx")
        'CType(objCon, CreateUseruc).LinacName = MachineName
        PlaceHolder1.Controls.Add(objCon)
        If Not IsPostBack Then
            MultiView1.SetActiveView(ShowNowt)
            BindUserGrid()
            DisplayRolesInGrid()
            mpContentPlaceHolder = _
                CType(Master.FindControl("ContentPlaceHolder1"),  _
                ContentPlaceHolder)
            If Not mpContentPlaceHolder Is Nothing Then

                wctrl = CType(mpContentPlaceHolder.FindControl("Writedatauc1"), WriteDatauc)
                Dim wcbutton As Button = CType(wctrl.FindControl("AcceptOK"), Button)
                wcbutton.Text = "Admin Sign-In"
                Application("ActionState") = "Confirm"
                wctrl.Visible = True

            End If

        End If
        'added 23 feb
        MachineName = Request.QueryString("val")
    End Sub
    Private Sub BindUserGrid()
        'Dim allUsers As MembershipUserCollection = Membership.GetAllUsers()
        'UserGrid.DataSource = allUsers
        Dim SqlDataSourceUser As New SqlDataSource()
        SqlDataSourceUser.ID = "SqlDataSourceUser"
        SqlDataSourceUser.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("userstring").ConnectionString

        SqlDataSourceUser.SelectCommand = "Select ur.firstname, ur.lastname, m.Email,u.UserName, n.RoleName, m.isapproved from aspnet_membership m left outer join aspnet_UsersInRoles r on m.UserId=r.UserId left outer join aspnet_users u on u.UserId=m.UserID left outer join aspnet_Roles n on n.RoleId = r.RoleId left outer join firstlastname ur on ur.UserId=m.UserId"

        UserGrid.DataSource = SqlDataSourceUser

        UserGrid.DataBind()
    End Sub
    Protected Sub UserGrid_RowEditing(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewEditEventArgs) Handles UserGrid.RowEditing
        ' Set the grid's EditIndex and rebind the data

        UserGrid.EditIndex = e.NewEditIndex
        BindUserGrid()
    End Sub

    Protected Sub UserGrid_RowCancelingEdit(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCancelEditEventArgs) Handles UserGrid.RowCancelingEdit
        ' Revert the grid's EditIndex to -1 and rebind the data
        UserGrid.EditIndex = -1
        BindUserGrid()
    End Sub

    Protected Sub UserGrid_RowUpdating(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewUpdateEventArgs) Handles UserGrid.RowUpdating
        ' Exit if the page is not valid
        If Not Page.IsValid Then
            Exit Sub
        End If

        ' Determine the username of the user we are editing
        Dim UserName As String
        UserName = UserGrid.DataKeys(e.RowIndex).Value.ToString()
        'It is very important that this is not bound on every page load and page load is called
        'before the row updating command so put the bind in isnot postback on page load
        'from http://www.codeproject.com/Questions/139076/not-getting-new-entered-values-on-grid-view-row-up

        ' Read in the entered information and update the user
        Dim EmailTextBox As TextBox = CType(UserGrid.Rows(e.RowIndex).FindControl("Email"), TextBox)
        Dim approvedbox As CheckBox = CType(UserGrid.Rows(e.RowIndex).FindControl("Checkbox1"), CheckBox)
        ' Return information about the user
        '
        Dim UserInfo As MembershipUser
        UserInfo = Membership.GetUser(UserName)

        ' Update the User account information
        UserInfo.Email = EmailTextBox.Text.Trim()
        UserInfo.IsApproved = approvedbox.Checked
        Membership.UpdateUser(UserInfo)
        ' Revert the grid's EditIndex to -1 and rebind the data
        UserGrid.EditIndex = -1
        BindUserGrid()

        ' This should email to say registration complete
        Dim smtpClient As SmtpClient = New SmtpClient()
        Dim message As MailMessage = New MailMessage()
        Try
            Dim fromAddress As New MailAddress("VISIRSERVER@VISIRSERVER.bsuh.nhs.uk", "ELF")
            Dim regemail As String = EmailTextBox.Text.ToString.Trim

            Dim regAddress As New MailAddress(regemail)
            message.From = fromAddress
            message.To.Add(regAddress)
            message.Subject = "ELF registration"
            message.Body = "Your registration for ELF is now complete."
            smtpClient.Host = "10.216.8.19"
            smtpClient.Send(message)

        Catch ex As Exception
            'should be an error action here
        End Try
    End Sub

    Protected Sub CreateRoleButton_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles CreateRoleButton.Click
        Dim newRoleName As String = RoleName.Text.Trim()

        If Not Roles.RoleExists(newRoleName) Then
            ' Create the role
            Roles.CreateRole(newRoleName)
            ' Refresh the RoleList Grid
            DisplayRolesInGrid()

        End If

        RoleName.Text = String.Empty
    End Sub

    Private Sub DisplayRolesInGrid()
        RoleList.DataSource = Roles.GetAllRoles()
        RoleList.DataBind()
    End Sub

    Protected Sub RoleList_RowDeleting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewDeleteEventArgs) Handles RoleList.RowDeleting
        ' Get the RoleNameLabel
        Dim RoleNameLabel As Label = CType(RoleList.Rows(e.RowIndex).FindControl("RoleNameLabel"), Label)

        ' Delete the role
        Roles.DeleteRole(RoleNameLabel.Text, False)

        ' Rebind the data to the RoleList grid
        DisplayRolesInGrid()

    End Sub

    Protected Sub Reset_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles ResetButton.Click
        Dim mpContentPlaceHolder As ContentPlaceHolder
        Dim UserNameTextBox As TextBox
        Dim username As String
        mpContentPlaceHolder = CType(Master.FindControl("ContentPlaceHolder1"), ContentPlaceHolder)
        If Not mpContentPlaceHolder Is Nothing Then
            UserNameTextBox = CType(mpContentPlaceHolder.FindControl("UserName"), TextBox)
            username = UserNameTextBox.Text
        End If

        Dim newPassword As String = "password"
        Dim usr As MembershipUser = Membership.GetUser(username)
        Dim resetPwd As String = usr.ResetPassword()
        usr.ChangePassword(resetPwd, newPassword)
    End Sub

    Protected Sub Button2_Click(sender As Object, e As System.EventArgs) Handles Button2.Click
        ClientScript.RegisterClientScriptBlock(Page.GetType(), "script", "window.close();", True)
        'Dim returnstring As String = MachineName + "page.aspx"
        'Response.Redirect(returnstring)
    End Sub
End Class
